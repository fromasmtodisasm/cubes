DONE:

    Get the server sending back uncompressed position, orientation, linear, angular velocity
    for the one cube. I can verify that at least the client inputs are being sent across to server
    and being received, and then I can interpolate the position of the client

    Just take the latest position/orientation for the player cube received and render it

    Hey it's actually working. Holy shit! :)

    Client should not render cubes until it is active.

TODO:

    Reduce server send rate to 10 packets per-second. Make this configurable in const.h

    Verify client now gets cube at 10HZ strobe

    ---------------------------------------

    Move single cube data into snapshot structure

    Implement a buffer on the client of snapshots indexed by tick

    Now bring the code for hermite interpolation back for the cube and smooth it out

    Add code to watch how early the server is delivering snapshots to the client

    If the client needs to slow down or speed up the iterator for interpolation, 
    implement this adjustment slowly over time, eg. +/- x ticks over y seconds.

    Now we have three time streams:

        - interpolated time (most in past)
        - server RTT time (client side prediction rewinds to here)
        - predicted client time (driven by the server telling the client to speed up or slow down)

    ----------------------------------------










    ----------------------------------------

    Bring across interpolation delay.

    Implement snapshot packets sent to client.

    Bring across delta encoding stuff from snapshots and interpolation demo.

    -----------------------------------------

    At this point should have pure client/server implementation with RTT baked in.

    Try running this over the internet to the real server instance running on linux.

    Are small adjustments required to get it to work? 

    Probably... but make sure.

    -----------------------------------------
