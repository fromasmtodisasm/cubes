DONE:

    Added entity_index to add object for physics.

    This is necessary because authority interaction needs to walk physics object
    and get back to entity index, so we need a mapping physics_index -> entity_index.

    This is best done inside the physics manager.

TODO:    

    ------------------------------



    Implement code that walks the authority interactions from the physics engine and turns
    these objects to red authority (and clears authority accum)

    ------------------------------

    Work out how to get the alpha blending and color transition blending working again.

    ------------------------------

    Should now basically have the same cube simulation going again, but now at 240HZ.

    Stop and evaluate. Is there anything else that should be done and cleaned up before going further?

    ------------------------------

    The at rest handling seems flakey.

    Perhaps best to switch over to ODEs internal at rest handling?

    ------------------------------

    Some things that should be cleaned up...

    physics_ode.cpp uses a bunch of C++ vector classes for authority walk. Can probably do better than this.

    ------------------------------

    Remove the simulation from the client and run it in the server

    Bring in enough networking to send packets between client and server (network.h)

    Send input across to server, using redundancy encoding for lost commands (eg. acks)

    Setup response packet from server -> client containing snapshot.

    Goal is to setup a pure client/server system (with latency here) before implementing client side prediction.

    Take time to get the jitter buffer for inputs and interpolation buffer working before going further.

    ------------------------------
