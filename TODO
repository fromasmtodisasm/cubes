DONE:

TODO:    

    Server needs a function to read and process packets.

    server_read_packets

    Client needs a function to send packets.

    client_send_packet

    Client also needs to read packets:

    client_read_packets

    ----------------------------------------------

    Would be nice to be able to connect by hostname. 

    If the address to connect to does not resolve to a valid address, try running it through DNS.

    Probably also need to recover some DNS resolve stuff (blocking is OK initially...)

    Next need the ability to have different packet types, but don't bind up with the silly
    packet queue processing from the previous setup, it's overkill. Instead process the packets
    in-place from the memory buffer.

    ----------------------------------------------

    Client should connect, get back response + token it should use for rest of communications.

    Design connection protocol so client can use token to request a restart if at any point
    it does not follow the server protocol, eg. server can just say, hey you should reconnect
    to me, or client can initiate reconnect and it should always work.

    Connection should have a period where the client sends data to the server, and the 
    server replies with a block of data to the client.

    While doing this the client should measure QoS to the server and synchronize time.

    Hitching during loading are not allowed because they throw off the time synchronization.
