DONE:

TODO:    

    Clean up the game code that applies force to lift the player cube so that it is also proportional to velocity

    Make the velocity taper off as it goes to infinity. n / ( 1 + n )

    ------------------------------

    Get existing code to do the authority walk working again.

    It should walk physics objects but mark the authority via the entity manager so it is generic,
    eg. not specific to cubes, but easily extended to all objects, and authority as a concept could
    exist for non-physics objects as well.

    ------------------------------

    Find better data structure and implementation. Surely it can be simpler/faster.

    ------------------------------

    Work out how to get the alpha blending and color transition blending working again.

    To do this we'll need the concept of per-entity view data, eg. indexed by entity id.

    ------------------------------

    Should now basically have the same cube simulation going again, but now at 240HZ.

    Stop and evaluate. Is there anything else that should be done and cleaned up before going further?

    ------------------------------

    The at rest handling seems flakey.

    Perhaps best to switch over to ODEs internal at rest handling?

    ------------------------------

    Some things that should be cleaned up...

    physics_ode.cpp uses a bunch of C++ vector classes for authority walk. Can probably do better than this.

    ------------------------------

    Remove the simulation from the client and run it in the server

    Bring in enough networking to send packets between client and server (network.h)

    Send input across to server, using redundancy encoding for lost commands (eg. acks)

    Setup response packet from server -> client containing snapshot.

    Goal is to setup a pure client/server system (with latency here) before implementing client side prediction.

    Take time to get the jitter buffer for inputs and interpolation buffer working before going further.

    ------------------------------
